# Generated by CodiumAI
from Controllers.ControlHistory import control_history
import os
import json


class TestControlHistory:
    # Tests that the function displays the history when action is 'show' and history file exists
    def test_show_history_exists(self, monkeypatch, tmpdir):
        # Create a temporary history.json file for testing
        history_file = tmpdir.join("history.json")
        history_file.write(
            json.dumps(
                [
                    {
                        "total_stopped_time": "00:00:00",
                        "total_movement_time": "00:00:00",
                        "total_time": "00:00:00",
                        "total_bill_stop": 0,
                        "total_bill_move": 0,
                        "total_bill_total": 0,
                    }
                ]
            )
        )

        # Change the current working directory to the temporary directory
        monkeypatch.chdir(tmpdir)

        # Mock the input function to return an empty string
        monkeypatch.setattr("builtins.input", lambda _: "")

        # Call the control_history function with the "show" action
        control_history("show")

        # Check if the history.json file still exists after showing the history
        assert os.path.isfile("history.json")

    # Tests that the function deletes the history when action is 'delete' and history file exists and user confirms
    def test_delete_history_exists_confirm(self, monkeypatch):
        monkeypatch.setattr("builtins.input", lambda _: "s")
        control_history("delete")
        assert not os.path.isfile("history.json")

    # Tests that the function displays a message when history file does not exist
    def test_history_does_not_exist(self, capsys):
        if os.path.isfile("history.json"):
            os.remove("history.json")
        control_history("show")
        captured = capsys.readouterr()
        assert "No existe historico" in captured.out

    # Tests that the function does not delete the history when action is 'delete' and history file does not exist
    def test_delete_history_does_not_exist(self, capsys):
        if os.path.isfile("history.json"):
            os.remove("history.json")
        control_history("delete")
        captured = capsys.readouterr()
        assert "No existe historico" in captured.out
        assert not os.path.isfile("history.json")
